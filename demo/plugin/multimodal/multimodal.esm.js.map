{"version":3,"file":"multimodal.esm.js","sources":["../../../src/plugin/js/helpers.js","../../../src/plugin/js/functions/modal.js","../../../node_modules/body-scroll-lock-upgrade/lib/index.esm.js","../../../src/plugin/js/functions/navigation.js","../../../src/plugin/js/functions/setsize.js","../../../node_modules/marked/lib/marked.esm.js","../../../src/plugin/js/functions/load-modal-content.js","../../../src/plugin/js/functions/loadvideo.js","../../../src/plugin/js/functions/loadimage.js","../../../src/plugin/js/functions/loadhtml.js","../../../src/plugin/js/plugin.js","../../../src/plugin/js/functions/setupoptions.js","../../../src/plugin/js/functions/preload.js","../../../src/plugin/js/functions/createmodal.js"],"sourcesContent":["/**\n * Check if a given string is valid JSON.\n * @param {string} str - The string to be checked.\n * @returns {boolean} `true` if the string is valid JSON, otherwise `false`.\n */\nexport const isJSON = str => {\n\ttry {\n\t\treturn (JSON.parse(str) && !!str);\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Convert a NodeList into an array based on provided selectors.\n * @param {Element} container - The root element to begin querying.\n * @param {string} selectors - A string containing one or more CSS selectors separated by commas.\n * @returns {Element[]} Array of elements that match the given selectors.\n */\nexport const selectionArray = (container, selectors) => {\n\tlet selections = container.querySelectorAll(selectors);\n\tlet selectionarray = Array.prototype.slice.call(selections);\n\treturn selectionarray;\n};\n\n/**\n * Check if an element has child nodes that are `SECTION` elements.\n * @param {Object} param0 - Object with childNodes property.\n * @param {NodeListOf<ChildNode>} param0.childNodes - List of child nodes of the element.\n * @returns {boolean} `true` if the element contains `SECTION` child nodes, otherwise `false`.\n */\nexport const isStack = ({childNodes}) => {\n\tlet isStack = false;\n\tfor (let i = 0; i < childNodes.length; i++) {\n\t\tif (childNodes[i].tagName == \"SECTION\") {\n\t\t\tisStack = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn isStack;\n};\n\n/**\n * Copy data attributes from a source element to a target element with an optional exception.\n * @param {Object} param0 - Object with attributes property.\n * @param {NamedNodeMap} param0.attributes - Map of attributes of the source element.\n * @param {Element} target - Target element to copy attributes to.\n * @param {string} [not] - Optional attribute name to exclude from copying.\n */\nexport const copyDataAttributes = ({attributes}, target, not) => {\n\t[...attributes].filter(({nodeName}) => nodeName.includes('data')).forEach(({nodeName, nodeValue}) => {\n\t\tif ((not && nodeName !== not) || !not) {\n\t\t\ttarget.setAttribute(nodeName, nodeValue);\n\t\t}\n\t});\n};\n\n/**\n * Check if the given item is an object and not an array.\n * @param {*} item - The item to be checked.\n * @returns {boolean} `true` if the item is an object and not an array, otherwise `false`.\n */\nexport const isObject = (item) => {\n\treturn (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deep merge multiple objects into a target object.\n * @param {Object} target - Target object to merge values into.\n * @param {...Object} sources - Source objects to merge from.\n * @returns {Object} The merged object.\n */\nexport const mergeDeep = (target, ...sources) => {\n\tif (!sources.length) return target;\n\tconst source = sources.shift();\n\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (isObject(source[key])) {\n\t\t\t\tif (!target[key]) Object.assign(target, { [key]: {} });\n\t\t\t\tmergeDeep(target[key], source[key]);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] });\n\t\t\t}\n\t\t}\n\t}\n\treturn mergeDeep(target, ...sources);\n}\n\n/**\n * Resolves the given Promise immediately using setTimeout.\n * @param {Function} resolve - The resolve function of a Promise.\n * @returns {number} The ID value of the timer that is set.\n */\nexport const doneLoading = (resolve) => {\n\treturn setTimeout(resolve, 0);\n}\n\n\n/**\n * Converts a JavaScript object or a JSON-formatted string to a JSON string.\n *\n * @param {Object|string} str - The input string or object to be converted to a JSON string.\n * @returns {string} The JSON string.\n */\nexport const toJSONString = (str) => {\n\tlet JSONString = ''\n\n\tif (typeof str === \"string\") str = str.replace(/[“”]/g,'\"').replace(/[‘’]/g,\"'\");\n\n\tif (isJSON(str)) {\n\t\tJSONString = str\n\t} else {\n\t\tif (typeof str === \"object\") {\n\t\t\tJSONString = JSON.stringify(str, null, 2)\n\t\t} else {\n\t\t\tJSONString = str.trim().replace(/'/g, '\"').charAt(0) === \"{\" ? str.trim().replace(/'/g, '\"') : `{${str.trim().replace(/'/g, '\"')}}`;\n\t\t}\n\t}\n\treturn JSONString;\n}\n\n\n/**\n * Dynamically loads a resource from the specified URL and calls a callback function when it's loaded.\n * Will not load the resource if it has already been loaded.\n *\n * @param {string} url - The URL of the resource to load.\n * @param {string} type - The type of resource to load.\n * @param {Function} callback - A callback function to be called when the resource is loaded.\n */\n\nexport const loadResource = (url, type, callback) => {\n\tlet head = document.querySelector('head');\n\tlet resource;\n\tlet alreadyExists = false;\n\n\tif (type === 'script') {\n\t\tif (!document.querySelector(`script[src=\"${url}\"]`)) {\n\t\t\tresource = document.createElement('script');\n\t\t\tresource.type = 'text/javascript';\n\t\t\tresource.src = url;\n\t\t} else { alreadyExists = true }\n\n\t} else if (type === 'stylesheet') {\n\n\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\n\t\t\tresource = document.createElement('link');\n\t\t\tresource.rel = 'stylesheet';\n\t\t\tresource.href = url;\n\t\t} else { alreadyExists = true }\n\t}\n\n\tif (!alreadyExists) {\n\t\tconst finish = () => {\n\t\t\tif (typeof callback === 'function') {\n\t\t\tcallback.call();\n\t\t\tcallback = null;\n\t\t\t}\n\t\t};\n\t\tresource.onload = finish;\n\t\tresource.onreadystatechange = function () {\n\t\t\tif (this.readyState === 'loaded') {\n\t\t\t\tfinish();\n\t\t\t}\n\t\t};\n\t\thead.appendChild(resource);\n\t}\n}\n\n\n/**\n * Retrieves the path of a JavaScript file based on its filename.\n *\n * @param {string} fileName - The filename of the script.\n * @returns {string} The path to the plugin's location.\n */\nexport const pluginPath = (fileName) => {\n\tlet path;\n\tlet pluginScript = document.querySelector(`script[src$=\"${fileName}\"]`);\n\tif (pluginScript) {\n\t\tpath = pluginScript.getAttribute(\"src\").slice(0, -1 * (fileName.length));\n\t} else {\n\t\tpath = import.meta.url.slice(0, import.meta.url.lastIndexOf('/') + 1);\n\t}\n\treturn path;\n}\n\n\n/**\n * Check if element 'a' appears before element 'b' in the DOM tree.\n *\n * @param {HTMLElement} a - The first HTML element to compare.\n * @param {HTMLElement} b - The second HTML element to compare.\n * @returns {boolean|undefined} - Returns `true` if element 'a' appears before element 'b', `false` if 'b' appears before 'a', and `undefined` if the elements have no relative position in the DOM tree.\n */\nexport const isBefore = (a, b) => {\n    var all = document.getElementsByTagName('*');\n\n    for (var i = 0; i < all.length; ++i) {\n        if (all[i] === a) {\n            return true;\n        } else if (all[i] === b) {\n            return false;\n        }\n    }\n    // If the elements have no relative position in the DOM tree\n    return undefined;\n};\n\n\n/**\n * Check the number of occurrences of a specific element in an array.\n *\n * @param {Array} array - The array in which occurrences are to be counted.\n * @param {*} element - The element to be counted within the array.\n * @returns {number} - The count of occurrences of the specified element in the array.\n */\nexport const checkOccurrence = (array, element) => {\n    let counter = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] == element) {\n            counter++;\n        }\n    }\n    return counter;\n};\n\n\n/**\n * Create an HTML element from a string of HTML.\n *\n * @param {string} thehtml - The string of HTML to be converted into an HTML element.\n * @returns {HTMLElement | null} - The HTML element created from the provided HTML string. Returns `null` if the element couldn't be created.\n */\nexport const createNode = (thehtml) => {\n    const fragment = document.createRange().createContextualFragment(thehtml);\n    return fragment.firstElementChild;\n};\n\n\n/**\n * Gets the index of the given DOM element within its parent's children.\n * @param {HTMLElement} elm - The target element.\n * @returns {number} - The index of the element within its parent's children.\n */\nexport const getNodeIndex = (elm) => [...elm.parentNode.children].indexOf(elm);\n\n\nexport const debugLog = (options, text) => {\n\tif (options.debug) console.log(text);\n}\n\nexport const roundToStep = (value, step = 1.0) => {\n\tconst inv = 1.0 / step;\n\treturn Math.round(value * inv) / inv;\n};","const MODAL_ELEMENT_CLASS = 'multimodal';\nconst MODAL_MAX_CLASS = 'mm-max';\nconst MODAL_DIALOG_CLASS = 'mm-dialog';\nconst MODAL_BODY_CLASS = 'mm-body';\nconst SHOWN_CLASS = 'shown';\nconst SHOW_CLASS = 'show';\n\nconst EVENT_SHOW = 'multimodal:show';\nconst EVENT_SHOWN = 'multimodal:shown';\nconst EVENT_HIDE = 'multimodal:hide';\nconst EVENT_HIDDEN = 'multimodal:hidden';\n\nexport class Modal {\n\n    constructor(deck) {\n\n        this.isOpen = false; // Initialize isOpen flag\n        this.modalElement = deck.getRevealElement().querySelector(`.${MODAL_ELEMENT_CLASS}`);\n        this.modalMax = this.modalElement.querySelector(`.${MODAL_MAX_CLASS}`);\n        this.modalDialog = this.modalElement.querySelector(`.${MODAL_DIALOG_CLASS}`);\n        this.modalBody = this.modalElement.querySelector(`.${MODAL_BODY_CLASS}`);\n        this.modalElement.style.setProperty('display', 'none');\n        this.modalElement.setAttribute('aria-hidden', 'true');\n        this.eventListeners = {};\n        this.presetConfigs = {};\n        this.closeButtonHtml = '';\n        this.deck = deck;\n\n        // Add transitionend event listener\n        this.modalElement.addEventListener('transitionend', (event) => {\n            // Avoid triggering the event when the transition is not for the modal itself\n            if (event.target == this.modalElement) {\n                if (!this.isOpen) {\n                    // Modal is hidden\n                    this.modalElement.classList.remove(SHOWN_CLASS);\n                    this.modalElement.classList.remove(SHOW_CLASS);\n                    this.modalElement.style.setProperty('display', 'none');\n                    this.trigger(EVENT_HIDDEN, \"hidden\");\n\n                    // Remove all classes except the normal modal classes. This is for the added classes by the user.\n                    this.modalElement.classList.forEach((className) => {\n                        if (className !== MODAL_ELEMENT_CLASS && className !== SHOW_CLASS && className !== SHOWN_CLASS && className !== 'hide' && className !== 'hidden') {\n                            this.modalElement.classList.remove(className);\n                        }\n                    });\n\n\n                } else {\n                    // Modal is shown\n                    this.modalElement.classList.add(SHOWN_CLASS);\n                    this.trigger(EVENT_SHOWN, \"shown\");\n                }\n            }\n        });\n    }\n\n    on(event, listener) {\n        if (!this.eventListeners[event]) {\n            this.eventListeners[event] = [];\n        }\n        this.eventListeners[event].push(listener);\n    }\n\n    trigger(event, action = 'show', ...args) {\n        const listeners = this.eventListeners[event];\n        if (listeners) {\n            listeners.forEach(listener => listener(action, ...args));\n        }\n        let details = {\n            action,\n            trigger: this.triggerElement,\n            modal: this.modalElement,\n            dialog: this.modalDialog,\n            body: this.modalDialog.querySelector(`.${MODAL_BODY_CLASS}`),\n            args\n        };\n        const customEvent = new CustomEvent(event, { detail: details });\n        this.modalElement.dispatchEvent(customEvent);\n    }\n\n    show() {\n        this.isOpen = true;\n        this.modalElement.style.removeProperty('display');\n        this.modalElement.removeAttribute('aria-hidden');\n\n        // Check for transition duration, if no transitions add both show and shown classes\n        if (window.getComputedStyle(this.modalElement).getPropertyValue('transition-duration') === '0s') {\n            this.modalElement.classList.add(SHOW_CLASS);\n            this.trigger(EVENT_SHOW, \"show\");\n            this.modalElement.classList.add(SHOWN_CLASS);\n            this.trigger(EVENT_SHOWN, \"shown\");\n        } else {\n            // Just add the show class. \n            // Because there is a transition, this will trigger the shown event at the end of the transition.\n            setTimeout(() => {\n                this.modalElement.classList.add(SHOW_CLASS);\n                this.trigger(EVENT_SHOW, \"show\");\n            }, 10);\n        }\n    }\n\n    hide() {\n        this.isOpen = false;\n        this.trigger(EVENT_HIDE, \"hide\");\n\n        // Hide modal\n        this.modalElement.setAttribute('aria-hidden', 'true');\n        if (window.getComputedStyle(this.modalElement).getPropertyValue('transition-duration') === '0s') {\n            this.modalElement.classList.remove(SHOWN_CLASS);\n            this.modalElement.classList.remove(SHOW_CLASS);\n            this.modalElement.style.setProperty('display', 'none');\n            this.trigger(EVENT_HIDDEN, 'hide');\n        } else {\n            this.modalElement.classList.remove(SHOW_CLASS);\n        }\n    }\n\n\n    setContent(content, type) {\n        let htmlString = content;\n        if (type == \"html\") {\n            htmlString = `<div class=\"mm-body\"><div class=\"mm-scrollbody\">${content}</div></div>`\n        }\n\n        this.modalDialog.innerHTML = this.closeButtonHtml + htmlString;\n    }\n}\n","/**\n * name: body-scroll-lock-upgrade\n * version: v1.1.0\n * author: Rick.li\n */\nlet hasPassiveEvents = false;\nif (typeof window !== \"undefined\") {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return void 0;\n    }\n  };\n  window.addEventListener(\"testPassive\", null, passiveTestOptions);\n  window.removeEventListener(\"testPassive\", null, passiveTestOptions);\n}\nconst isIosDevice = typeof window !== \"undefined\" && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === \"MacIntel\" && window.navigator.maxTouchPoints > 1);\nlet locks = [];\nlet locksIndex = /* @__PURE__ */ new Map();\nlet documentListenerAdded = false;\nlet initialClientY = -1;\nlet previousBodyOverflowSetting;\nlet htmlStyle;\nlet bodyStyle;\nlet previousBodyPaddingRight;\nconst allowTouchMove = (el) => locks.some((lock) => {\n  if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n    return true;\n  }\n  return false;\n});\nconst preventDefault = (rawEvent) => {\n  const e = rawEvent || window.event;\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n  if (e.touches.length > 1)\n    return true;\n  if (e.preventDefault)\n    e.preventDefault();\n  return false;\n};\nconst setOverflowHidden = (options) => {\n  if (previousBodyPaddingRight === void 0) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    const scrollBarGap = window.innerWidth - document.documentElement.getBoundingClientRect().width;\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(\n        window.getComputedStyle(document.body).getPropertyValue(\"padding-right\"),\n        10\n      );\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`;\n    }\n  }\n  if (previousBodyOverflowSetting === void 0) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = \"hidden\";\n  }\n};\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== void 0) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n    previousBodyPaddingRight = void 0;\n  }\n  if (previousBodyOverflowSetting !== void 0) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n    previousBodyOverflowSetting = void 0;\n  }\n};\nconst setPositionFixed = () => window.requestAnimationFrame(() => {\n  const $html = document.documentElement;\n  const $body = document.body;\n  if (bodyStyle === void 0) {\n    htmlStyle = { ...$html.style };\n    bodyStyle = { ...$body.style };\n    const { scrollY, scrollX, innerHeight } = window;\n    $html.style.height = \"100%\";\n    $html.style.overflow = \"hidden\";\n    $body.style.position = \"fixed\";\n    $body.style.top = `${-scrollY}px`;\n    $body.style.left = `${-scrollX}px`;\n    $body.style.width = \"100%\";\n    $body.style.height = \"auto\";\n    $body.style.overflow = \"hidden\";\n    setTimeout(\n      () => window.requestAnimationFrame(() => {\n        const bottomBarHeight = innerHeight - window.innerHeight;\n        if (bottomBarHeight && scrollY >= innerHeight) {\n          $body.style.top = -(scrollY + bottomBarHeight) + \"px\";\n        }\n      }),\n      300\n    );\n  }\n});\nconst restorePositionSetting = () => {\n  if (bodyStyle !== void 0) {\n    const y = -parseInt(document.body.style.top, 10);\n    const x = -parseInt(document.body.style.left, 10);\n    const $html = document.documentElement;\n    const $body = document.body;\n    $html.style.height = (htmlStyle == null ? void 0 : htmlStyle.height) || \"\";\n    $html.style.overflow = (htmlStyle == null ? void 0 : htmlStyle.overflow) || \"\";\n    $body.style.position = bodyStyle.position || \"\";\n    $body.style.top = bodyStyle.top || \"\";\n    $body.style.left = bodyStyle.left || \"\";\n    $body.style.width = bodyStyle.width || \"\";\n    $body.style.height = bodyStyle.height || \"\";\n    $body.style.overflow = bodyStyle.overflow || \"\";\n    window.scrollTo(x, y);\n    bodyStyle = void 0;\n  }\n};\nconst isTargetElementTotallyScrolled = (targetElement) => targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\nconst handleScroll = (event, targetElement) => {\n  const clientY = event.targetTouches[0].clientY - initialClientY;\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    return preventDefault(event);\n  }\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    return preventDefault(event);\n  }\n  event.stopPropagation();\n  return true;\n};\nconst disableBodyScroll = (targetElement, options) => {\n  if (!targetElement) {\n    console.error(\n      \"disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.\"\n    );\n    return;\n  }\n  locksIndex.set(\n    targetElement,\n    (locksIndex == null ? void 0 : locksIndex.get(targetElement)) ? (locksIndex == null ? void 0 : locksIndex.get(targetElement)) + 1 : 1\n  );\n  if (locks.some((lock2) => lock2.targetElement === targetElement)) {\n    return;\n  }\n  const lock = {\n    targetElement,\n    options: options || {}\n  };\n  locks = [...locks, lock];\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n  if (isIosDevice) {\n    targetElement.ontouchstart = (event) => {\n      if (event.targetTouches.length === 1) {\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = (event) => {\n      if (event.targetTouches.length === 1) {\n        handleScroll(event, targetElement);\n      }\n    };\n    if (!documentListenerAdded) {\n      document.addEventListener(\n        \"touchmove\",\n        preventDefault,\n        hasPassiveEvents ? { passive: false } : void 0\n      );\n      documentListenerAdded = true;\n    }\n  }\n};\nconst clearAllBodyScrollLocks = () => {\n  if (isIosDevice) {\n    locks.forEach((lock) => {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n    if (documentListenerAdded) {\n      document.removeEventListener(\n        \"touchmove\",\n        preventDefault,\n        hasPassiveEvents ? { passive: false } : void 0\n      );\n      documentListenerAdded = false;\n    }\n    initialClientY = -1;\n  }\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n  locks = [];\n  locksIndex.clear();\n};\nconst enableBodyScroll = (targetElement) => {\n  if (!targetElement) {\n    console.error(\n      \"enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.\"\n    );\n    return;\n  }\n  locksIndex.set(\n    targetElement,\n    (locksIndex == null ? void 0 : locksIndex.get(targetElement)) ? (locksIndex == null ? void 0 : locksIndex.get(targetElement)) - 1 : 0\n  );\n  if ((locksIndex == null ? void 0 : locksIndex.get(targetElement)) === 0) {\n    locks = locks.filter((lock) => lock.targetElement !== targetElement);\n    locksIndex == null ? void 0 : locksIndex.delete(targetElement);\n  }\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener(\n        \"touchmove\",\n        preventDefault,\n        hasPassiveEvents ? { passive: false } : void 0\n      );\n      documentListenerAdded = false;\n    }\n  }\n  if (locks.length === 0) {\n    if (isIosDevice) {\n      restorePositionSetting();\n    } else {\n      restoreOverflowSetting();\n    }\n  }\n};\nexport {\n  clearAllBodyScrollLocks,\n  disableBodyScroll,\n  enableBodyScroll\n};\n//# sourceMappingURL=index.esm.js.map\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock-upgrade';\n\nexport const setPresetConfigs = (deck, modal) => {\n    modal.presetConfigs = {\n        keyboard: deck.getConfig().keyboard,\n        mouseWheel: deck.getConfig().mouseWheel,\n        scrollProgress: deck.getConfig().scrollProgress\n    };\n};\n\nexport const isScroller = (deck) => {\n    if (deck.getRevealElement().closest(\".reveal-scroll\")) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport const spaceEscapeHide = (deck, modal) => {\n\n    if (modal.modalElement.dataset.modalType == \"video\") {\n\n        const video = modal.modalDialog.querySelector('video');\n        if (video) {\n            deck.configure({\n                keyboard: { \n                    27: () => { modal.hide() },\n                    32: () => { \n                        if (video.paused) {\n                            video.play();\n                        } else {\n                            video.pause();\n                        }\n                     }\n                }\n            });\n        }\n    } else {\n        deck.configure({\n            keyboard: { \n                27: () => { modal.hide() },\n                32: () => { modal.hide() }\n            }\n        });\n    }\n};\n\nexport const lockNav = (deck, modal) => {\n\n    if (modal.modalElement) {\n        disableBodyScroll(modal.modalElement);\n    }\n\n    if (!isScroller(deck)) {\n\n        deck.configure({\n            keyboard: false,\n            mouseWheel: false,\n            scrollProgress: false\n        });\n    }\n    modal.isLocked = true;\n};\n\nexport const unlockNav = (deck, modal) => {\n\n    if (modal.modalElement) {\n        enableBodyScroll(modal.modalElement);\n    }\n\n\n\n    if (!isScroller(deck)) {\n        deck.configure({\n            keyboard: modal.presetConfigs.keyboard,\n            mouseWheel: modal.presetConfigs.mouseWheel,\n            scrollProgress: modal.presetConfigs.scrollProgress\n        });\n    }\n    modal.isLocked = false;\n};\n","import { roundToStep } from '../helpers.js';\n\nexport const setSize = (margin, revealEl, revealScale, modal, options) => {\n\n\t\tlet revealWidth = revealEl.offsetWidth;\n\t\tlet revealHeight = revealEl.offsetHeight;\n\n\t\tlet maxWidth = (1 - margin) * revealWidth / revealScale;\n\t\tlet maxHeight = (1 - margin) * revealHeight / revealScale;\n\n\t\tmodal.modalElement.style.setProperty('--mm-maxwidth', `${Math.floor(maxWidth)}px`);\n\t\tmodal.modalElement.style.setProperty('--mm-maxheight', `${Math.floor(maxHeight)}px`);\n\n\t\tif (options.scalecorrection) {\n\n\t\t\tlet inverseScale = Math.max(1, 1 / revealScale);\n\t\t\tmodal.modalElement.style.setProperty('--mm-inversescale', roundToStep(inverseScale, 0.1));\n\n\t\t\tlet borderWidth = options.borderwidth.match(/(\\d*\\.?\\d+)\\s*(\\w+)/);\n\n\t\t\tif (borderWidth !== null) {\n\t\t\t\tlet sizeValue = parseFloat(borderWidth[1]);\n\t\t\t\tlet unit = borderWidth[2];\n\t\t\t\tlet newBorderwidth = roundToStep(sizeValue * inverseScale, 0.5) + unit;\n\t\t\t\tmodal.modalElement.style.setProperty('--mm-borderwidth', newBorderwidth);\n\t\t\t}\n\t\t}\n};","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { loadVideo } from './loadvideo.js';\nimport { loadImage } from './loadimage.js';\nimport { loadHTML } from './loadhtml.js';\n\nexport async function loadModalContent(trigger, modal, options, originalOptions) {\n\n    const modalType = trigger.dataset.modalType;\n    const modalUrl = trigger.dataset.modalUrl || trigger.getAttribute('href') || null;\n    let modalPadding = options.padding;\n\n    if (trigger.dataset.modalOverlaycolor && trigger.dataset.modalOverlaycolor !== originalOptions.overlaycolor) {\n        modal.modalElement.style.setProperty('--mm-overlaycolor', trigger.dataset.modalOverlaycolor);\n    }\n\n    if (trigger.dataset.modalClass) {\n        modal.modalElement.classList.add(...trigger.dataset.modalClass.split(/[ ,]+/));\n    }\n\n    if (modalType == 'html') {\n\n        modalPadding = trigger.dataset.modalPadding || options.padding.html || options.padding;\n        if (modalPadding !== originalOptions.padding.html) {\n            modal.modalElement.style.setProperty('--mm-modal-padding', modalPadding);\n        }\n\n        let modalBackground = trigger.dataset.modalBackground || options.background.html || options.background;\n        if (modalBackground !== originalOptions.background.html) {\n            modal.modalElement.style.setProperty('--mm-modal-background', modalBackground);\n        }\n\n    } else if (modalType == 'iframe') {\n\n        modalPadding = trigger.dataset.modalPadding || options.padding.iframe|| options.padding;\n        if (modalPadding !== \"0\") {\n            modal.modalElement.style.setProperty('--mm-modal-padding', modalPadding);\n        }\n\n        let modalBackground = trigger.dataset.modalBgcolor || options.background.iframe || options.background;\n        if (modalBackground !== originalOptions.background.iframe) {\n            modal.modalElement.style.setProperty('--mm-modal-background', modalBackground);\n        }\n\n    } else {\n\n        modalPadding = trigger.dataset.modalPadding || options.padding.media || options.padding;\n        if (modalPadding !== \"0\") {\n            modal.modalElement.style.setProperty('--mm-modal-padding', modalPadding);\n        }\n\n        let modalBackground = trigger.dataset.modalBackground || options.background.media || options.background;\n        if (modalBackground !== originalOptions.background.media) {\n            modal.modalElement.style.setProperty('--mm-modal-background', modalBackground);\n        }\n    }\n\n    modal.triggerElement = trigger;\n\n    let modalContent;\n    let hasError = false;\n    if (modalType === 'video') {\n        modalContent = await loadVideo(modalUrl, modal, options);\n\n    } else if (modalType === 'image') {\n        let imageModalUrl = (modalUrl && modalUrl != \"#\" && modalUrl != \"#/\") ? modalUrl : trigger.firstChild.tagName == \"IMG\" ? trigger.firstChild.getAttribute('src') : null;\n        let imageAlt = trigger.firstChild.tagName == \"IMG\" ? trigger.firstChild.getAttribute('alt') : null;\n        modalContent = await loadImage(imageModalUrl, modal, imageAlt);\n\n    } else if (modalType === 'html') {\n        modalContent = await loadHTML(modalUrl, modal);\n\n    } else if (modalType === 'iframe') {\n        modalContent = `<iframe class=\"mm-body\" src=\"${modalUrl}\" frameborder=\"0\" allowfullscreen></iframe>`;\n        modal.modalElement.dataset.modalType = 'iframe';\n\n    } else {\n        console.error('Unknown modal type');\n        return;\n    }\n\n    if (!modalContent) {\n        hasError = true;\n    }\n\n    // If there's an error, do not proceed\n    if (hasError) {\n        return;\n    }\n\n    // Set the modal content\n    modal.setContent(modalContent, modalType);\n\n    // Show the modal\n    modal.show();\n}\n\n","export async function loadVideo(url, modal, options) {\n    try {\n        const video = document.createElement('video');\n        video.src = url;\n        video.controls = options.videocontrols;\n        video.preload = \"metadata\"; // Load only metadata initially\n\n        // Wait for video metadata to be loaded\n        await new Promise((resolve, reject) => {\n            video.addEventListener('loadedmetadata', resolve);\n            video.addEventListener('error', reject);\n        });\n\n        // Check if video metadata is loaded\n        if (video.readyState >= 0) { \n            video.preload = \"auto\";\n            modal.modalElement.dataset.modalType = 'video';\n            video.classList.add(\"mm-body\");\n            return video.outerHTML;\n        } else {\n            throw new Error('Video metadata cannot be loaded.');\n        }\n    } catch (error) {\n        console.error('Error loading video:', error);\n        return null;\n    }\n}\n","/**\n * Load an image into the modal.\n * @param {string} url - The URL of the image.\n */\nexport async function loadImage(url, modal, imageAlt) {\n    return new Promise((resolve) => {\n        const image = new Image();\n        let altAttribute = \"\";\n        if (imageAlt) {\n            altAttribute = ` alt=\"${imageAlt}\"`;\n        }\n        image.onload = () => {\n            modal.modalElement.dataset.modalType = 'image';\n            resolve(`<img class=\"mm-body\" src=\"${url}\"${altAttribute}>`);\n        };\n        image.onerror = () => {\n            console.error(`Error loading image: ${url}`);\n            resolve(null); // Resolve with null if there's an error\n        };\n        image.src = url;\n    });\n}","import { marked } from 'marked';\n\nexport function loadHTML(source, modal) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            let htmlString;\n\n            // Check if the source is a URL string\n            if (typeof source === 'string') {\n\n                if (source.startsWith('#')) {\n\n                    const targetElement = document.querySelector(source);\n                    if (!targetElement) {\n\n                        throw new Error('Anchor element with specified ID not found.');\n                        \n                    } else {\n\n                        if (targetElement.firstElementChild.tagName.toLowerCase() === 'section') {\n                            htmlString = targetElement.firstElementChild.innerHTML;\n                        } else {\n                            htmlString = targetElement.innerHTML;\n                        }\n\n                        modal.modalElement.dataset.modalType = 'html';\n                    }\n\n                } else if (source.endsWith('.md')) {\n\n                    const response = await fetch(source);\n                    if (!response.ok) {\n                        throw new Error('Failed to fetch MD content.');\n                    }\n                    const md = await response.text();\n                    modal.modalElement.dataset.modalType = 'html';\n                    htmlString = marked(md);\n\n                } else if (source.endsWith('.html')) {\n\n                    const response = await fetch(source);\n                    if (!response.ok) {\n                        throw new Error('Failed to fetch HTML content.');\n                    }\n                    htmlString = await response.text();\n                    modal.modalElement.dataset.modalType = 'html';\n                } else {\n                    throw new Error('Unsupported HTML content source.');\n                }\n            } else {\n                throw new Error('Invalid HTML content source. Must be a URL string or an anchor element.');\n            }\n\n            \n\n            resolve(htmlString);\n        } catch (error) {\n            console.error('Error loading HTML content:', error);\n            reject(error);\n        }\n    });\n}\n","\nimport { loadResource, mergeDeep, pluginPath } from \"./helpers.js\"\nimport { createModalContainer } from './functions/createmodal.js';\nimport { Modal } from './functions/modal.js';\nimport { setPresetConfigs, spaceEscapeHide, lockNav, unlockNav, isScroller } from './functions/navigation.js';\nimport { setSize } from './functions/setsize.js';\nimport { loadModalContent } from './functions/load-modal-content.js';\nimport { preloadFromSlide } from './functions/preload.js';\nimport { setupOptions } from './functions/setupoptions.js';\n\nconst Plugin = () => {\n\n\tlet options = {};\n\n\tconst Multimodal = (deck, options, originalOptions) => {\n\n\t\tconst TRIGGERATTRIBUTE = \"data-modal-type\";\n\t\tconst CLOSEATTRIBUTE = \"data-modal-close\";\n\n\t\tconst revealEl = deck.getRevealElement();\n\n\t\tconst modalClickTriggers = Array.from(revealEl.querySelectorAll(`[${TRIGGERATTRIBUTE}]:not(section)`));\n\t\tconst revealMargin = deck.getConfig().margin;\n\n\t\tconst setupModal = (deck) => {\n\t\t\tconst modal = new Modal(deck);\n\n\t\t\tsetPresetConfigs(deck, modal);\n\t\t\tsetupOptions(modal, options, originalOptions);\n\t\t\t\n\t\t\tconst escapePressed = (event) => {\n\t\t\t\tif (event.key === 'Escape' || event.keyCode === 27) {\n\t\t\t\t\tif (modal.isOpen) { modal.hide() };\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodal.closeButtonHtml = `<button class=\"mm-close\" type=\"button\" aria-hidden=\"true\" ${CLOSEATTRIBUTE} aria-label=\"Close\"><svg class=\"offset\" viewport=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><g transform=\"rotate(45 12 12)\"><line x1=\"0\" y1=\"12\" x2=\"24\" y2=\"12\"></line><line x1=\"12\" y1=\"0\" x2=\"12\" y2=\"24\"></line></g></svg></button>`;\n\n\n\t\t\tconst handleModalTrigger = async (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst target = event.currentTarget;\n\t\t\t\tif (target.hasAttribute('href') && (target.getAttribute('href') === \"#\" || target.getAttribute('href') === \"#/\" )) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t\tawait loadModalContent(target, modal, options, originalOptions);\n\t\t\t};\n\n\t\t\t// Current triggers in the DOM\n\t\t\tmodalClickTriggers.forEach(trigger => {\n\t\t\t\ttrigger.addEventListener('click', handleModalTrigger);\n\t\t\t});\n\n\t\t\t// Future triggers in the DOM\n\t\t\t// Via an observer because delegating through document click event does not work\n\t\t\tconst observer = new MutationObserver(mutationsList => {\n\t\t\t\tmutationsList.forEach(mutation => {\n\t\t\t\t\tif (mutation.type === 'childList') {\n\t\t\t\t\t\tmutation.addedNodes.forEach(node => {\n\t\t\t\t\t\t\tif (node.nodeType === 1 && node.hasAttribute(TRIGGERATTRIBUTE) && node.tagName.toLowerCase() !== 'section') {\n\t\t\t\t\t\t\t\tnode.addEventListener('click', handleModalTrigger);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tdeck.addEventListener(\"click\", async (event) => {\n\t\t\t\tif (event.target.closest(`[${CLOSEATTRIBUTE}]`) || event.target.closest(`a[href=\"#multimodal\"]`) ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tmodal.hide();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst handleModalSlideModal = (slide) => {\n\t\t\t\tif (slide.dataset.modalType) {\n\t\t\t\t\tlet whenEvent = slide.dataset.modalEvent ? slide.dataset.modalEvent : options.slidemodalevent;\n\t\t\t\t\treturn whenEvent;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdeck.on('slidechanged', async (event) => {\n\n\t\t\t\tif (modal.isOpen) {\n\t\t\t\t\tmodal.hide();\n\t\t\t\t};\n\t\n\t\t\t\tpreloadFromSlide(event.currentSlide);\n\t\n\t\t\t\tif (isScroller(deck)) {\n\t\n\t\t\t\t\tif (event.currentSlide.dataset.modalType && options.slidemodalevent == \"slidetransitionend\") {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t// Timeout needed for when the first slide is a modal slide.\n\t\t\t\t\t\t\tif (deck.getCurrentSlide() == event.currentSlide) {\n\t\t\t\t\t\t\t\tloadModalContent(event.currentSlide, modal, options, originalOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 10);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tif (handleModalSlideModal(event.currentSlide) && handleModalSlideModal(event.currentSlide) == \"slidechanged\") {\n\t\t\t\t\t\tawait loadModalContent(event.currentSlide, modal, options, originalOptions);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tdeck.on('slidetransitionend', async (event) => {\n\n\t\t\t\tif (handleModalSlideModal(event.currentSlide) && handleModalSlideModal(event.currentSlide) == \"slidetransitionend\") {\n\t\t\t\t\tawait loadModalContent(event.currentSlide, modal, options, originalOptions);\n\t\t\t\t}\n\n\t\t\t});\n\t\n\t\t\tdeck.on('ready', async (event) => {\n\t\n\t\t\t\tsetSize(revealMargin, revealEl, deck.getScale(), modal, options);\n\n\t\t\t\tif (handleModalSlideModal(event.currentSlide) && (handleModalSlideModal(event.currentSlide) == \"slidetransitionend\" || handleModalSlideModal(event.currentSlide) == \"slidechanged\")) {\n\t\t\t\t\tawait loadModalContent(event.currentSlide, modal, options, originalOptions);\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\tobserver.observe(revealEl, { childList: true, subtree: true });\n\n\t\t\t});\n\t\n\t\t\tdeck.on('resize', event => {\n\t\t\t\tsetSize(revealMargin, revealEl, event.scale, modal, options);\n\t\t\t});\n\t\n\n\t\t\t// Show behaviour\n\t\n\t\t\tmodal.on('multimodal:show', () => {\n\t\n\t\t\t\trevealEl.classList.add('multimodal-open');\n\t\t\t\tdocument.addEventListener('keydown', escapePressed);\n\t\n\t\t\t\tif (!modal.modalElement.closest(\".reveal-scroll\")) {\n\t\t\t\t\tspaceEscapeHide(deck, modal);\n\t\t\t\t}\n\t\n\t\t\t\tconst closeOnClickOutside = (event) => {\n\t\t\t\t\tif (!modal.isLocked) {\n\t\t\t\t\t\tif (event.target === modal.modalElement || event.target === modal.modalMax) {\n\t\t\t\t\t\t\tmodal.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t\tmodal.modalElement.addEventListener('click', closeOnClickOutside);\n\t\t\t\tmodal.closeOnClickOutside = closeOnClickOutside;\n\t\t\t});\n\t\n\t\t\tmodal.on('multimodal:shown', () => {\n\n\t\t\t\tif (modal.triggerElement) {\n\t\t\t\t\tif (modal.triggerElement.dataset.modalNavblock && modal.triggerElement.dataset.modalNavblock == \"true\" ) {\n\t\t\t\t\t\tlockNav(deck, modal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tconst video = modal.modalDialog.querySelector('video');\n\t\t\t\tif (video) {\n\t\t\t\t\tif (options.videoautoplay) {\n\t\t\t\t\t\tvideo.play();\n\t\t\t\t\t}\n\t\t\t\t\tif (options.videoautohide) {\n\t\t\t\t\t\tvideo.addEventListener('ended', () => {\n\t\t\t\t\t\t\tmodal.hide();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tvideo.addEventListener('webkitendfullscreen', function (e) { \n\t\t\t\t\t\tif (options.debug) {\n\t\t\t\t\t\t\tconsole.log('Exited fullscreen');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodal.hide();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t// Hide behaviour\n\t\n\t\t\tmodal.on('multimodal:hide', () => {\n\t\t\t\trevealEl.classList.remove('multimodal-open');\n\t\t\t\tif (modal.closeOnClickOutside) {\n\t\t\t\t\tmodal.modalElement.removeEventListener('click', modal.closeOnClickOutside);\n\t\t\t\t\tmodal.closeOnClickOutside = null;\n\t\t\t\t}\n\t\n\t\t\t\tunlockNav(deck, modal);\n\t\t\t\tdocument.removeEventListener('keydown', escapePressed);\n\t\n\t\t\t\tconst video = modal.modalDialog.querySelector('video');\n\t\t\t\tif (video) {\n\t\t\t\t\tvideo.pause();\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tmodal.on('multimodal:hidden', () => {\n\t\t\t\tmodal.modalBody.innerHTML = '';\n\t\t\t\tconst iframe = modal.modalDialog.querySelector('iframe');\n\t\t\t\tif (iframe) { iframe.src = '' }\n\t\t\t\tmodal.modalElement.style.removeProperty('--mm-modal-background');\n\t\t\t\tmodal.modalElement.style.removeProperty('--mm-overlaycolor');\n\t\t\t\tmodal.modalElement.style.removeProperty('--mm-modal-padding');\n\t\t\t\tmodal.modalElement.style.removeProperty('--mm-outerradius');\n\t\t\t});\n\n\t\t\tif (options.debug) {\n\t\t\t\tdeck.on('multimodal:shown', () => { console.log('Modal shown'); });\n\t\t\t\tdeck.on('multimodal:hidden', () => { console.log('Modal hidden'); });\n\t\t\t\tdeck.on('multimodal:show', () => { console.log('Modal show'); });\n\t\t\t\tdeck.on('multimodal:hide', () => { console.log('Modal hide'); });\n\t\t\t}\n\t\t}\n\n\t\tlet modalElement = revealEl.querySelector('.multimodal');\n\n\t\tif ( modalElement ) {\n\t\t\t// There already is a multimodal container\n\t\t\tsetupModal(deck);\n\t\t  } else {\n\t\t\t// Create a multimodal container\n\t\t\tcreateModalContainer(deck).then(\n\t\t\t\tsetupModal(deck)\n\t\t\t);\n\t\t}\n\n\t};\n\n\t/**\n\t* Initialize the plugin\n\t* @param {object} deck - The deck object\n\t*/\n\tconst init = (deck) => {\n\n\t\tlet defaultOptions = {\n\t\t\tbackground: {\n\t\t\t\thtml: \"var(--r-background-color)\",\n\t\t\t\tiframe: \"var(--r-background-color)\",\n\t\t\t\tmedia: \"white\"\n\t\t\t},\n\t\t\tbordercolor: \"white\",\n\t\t\tborderwidth: \"1px\",\n\t\t\tclosebuttonhtml: '',\n\t\t\tcssautoload: true,\n\t\t\tcsspath: '',\n\t\t\thtmlminwidth: \"100px\",\n\t\t\thtmlminheight: \"100px\",\n\t\t\toverlaycolor: \"rgba(0, 0, 0, 0.30)\",\n\t\t\tpadding: {\n\t\t\t\thtml: \"1em\",\n\t\t\t\tiframe: \"0\",\n\t\t\t\tmedia: \"0\"\n\t\t\t},\n\t\t\tradius: \"0.5em\",\n\t\t\tscalecorrection: true,\n\t\t\tshadow: \"0 0.5em 0.75em 0.5em rgba(0, 0, 0, 0.25)\",\n\t\t\tslidemodalevent: \"slidetransitionend\",\n\t\t\tspeed: 300,\n\t\t\tvideoautoplay: true,\n\t\t\tvideocontrols: true,\n\t\t\tvideoautohide: true,\n\t\t\tzoom: true,\n\t\t\tzoomfrom: 0.90\n\t\t};\n\n\t\tlet originalOptions = JSON.parse(JSON.stringify(defaultOptions))\n\t\toptions = mergeDeep(defaultOptions, deck.getConfig().multimodal || {});\n\t\toptions.indexbase = deck.getConfig().hashOneBasedIndex ? 1 : 0;\n\n\t\tif (options.cssautoload) {\n\n\t\t\tlet PluginStylePath = options.csspath.multimodal ? options.csspath.multimodal : options.csspath ? options.csspath : null || `${pluginPath()}multimodal.css` || 'plugin/multimodal/multimodal.css'\n\n\t\t\tif (options.debug) {\n\t\t\t\tconsole.log(`Plugin path = ${pluginPath()}`);\n\t\t\t\tconsole.log(`Multimodal CSS path = ${PluginStylePath}`);\n\t\t\t}\n\t\n\t\t\tconst generator = document.querySelector('[name=generator]');\n\t\t\tif (!(generator && generator.content.includes(\"quarto\"))) {\n\t\t\t\tloadResource(PluginStylePath, 'stylesheet');\n\t\t\t}\n\t\t}\n\n\t\tif (options.debug) {\n\t\t\tlet style = document.createElement('style');\n\t\t\tstyle.innerHTML = `.reveal .slides, .scroll-page-content:has(section.present) { box-shadow: inset 0 0 0 1px orange} .mm-max { box-shadow: inset 0 0 0 1px red}`;\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\n\t\tMultimodal(deck, options, originalOptions);\n\n\t};\n\n\treturn {\n\t\tid: 'multimodal',\n\t\tinit: init\n\t};\n};\n\nexport default Plugin;","export async function setupOptions(modal, options, originalOptions) {\n\n    // Options for all modals\n\n    if (options.closebuttonhtml !== '') {\n        modal.closeButtonHtml = options.closebuttonhtml;\n    }\n    if (options.overlaycolor !== originalOptions.overlaycolor) {\n        modal.modalElement.style.setProperty('--mm-overlaycolor', options.overlaycolor);\n    }\n    if (options.speed !== originalOptions.speed) {\n        let speed = options.speed / 1000;\n        modal.modalElement.style.setProperty('--mm-transspeed', `${speed}s`);\n    }\n\n    if (options.htmlminwidth !== originalOptions.htmlminwidth) {\n        let newWidth = !isNaN(options.htmlminwidth) ? `${options.htmlminwidth}px` : options.htmlminwidth;\n        modal.modalElement.style.setProperty('--mm-minwidth', newWidth);\n    }\n    if (options.htmlminheight !== originalOptions.htmlminheight) {\n        let newHeight = !isNaN(options.htmlminheight) ? `${options.htmlminheight}px` : options.htmlminheight;\n        modal.modalElement.style.setProperty('--mm-minheight', newHeight);\n    }\n\n    if (options.radius !== originalOptions.radius) {\n        modal.modalElement.style.setProperty('--mm-outerradius', options.radius);\n    }\n\n    if (options.bordercolor !== originalOptions.bordercolor) {\n        modal.modalElement.style.setProperty('--mm-bordercolor', options.bordercolor);\n    }\n\n    if (options.borderwidth !== originalOptions.borderwidth) {\n        modal.modalElement.style.setProperty('--mm-borderwidth', options.borderwidth);\n    }\n\n    if (options.shadow !== originalOptions.shadow) {\n        modal.modalElement.style.setProperty('--mm-shadow', options.shadow);\n    }\n    if (options.zoom) {\n        if (options.zoomfrom !== originalOptions.zoomfrom) {\n            modal.modalElement.style.setProperty('--mm-initialscale', options.zoomfrom);\n        }\n    } else {\n        modal.modalElement.style.setProperty('--mm-initialscale', 1);\n    }\n}\n","/**\n * Preload from the current slide triggers\n * @param {string} slide - The slide.\n */\nexport function preloadFromSlide(slide) {\n\tlet slideTriggers = slide.querySelectorAll(`[data-modal-type]`);\n\n\tif (slideTriggers) {\n\t\tslideTriggers.forEach(trigger => {\n\n\t\t\t// Preload, images only for now\n\n\t\t\tif (trigger.dataset.modalType == 'image') {\n\n\t\t\t\tlet triggerurl = trigger.dataset.modalUrl || trigger.getAttribute('href') || null;\n\t\t\t\tif (!triggerurl) {\n\t\t\t\t\ttriggerurl = trigger.firstChild.tagName == \"IMG\" ? trigger.firstChild.getAttribute('src') : null;\n\t\t\t\t}\n\t\t\t\tif (triggerurl) {\n\t\t\t\t\tvar img = new Image();\n\t\t\t\t\timg.src = triggerurl;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t}\n}","export function createModalContainer(deck) {\n  return new Promise((resolve, reject) => {\n    // Define the modal container HTML using template literals\n    const modalContainerHTML = `\n      <div class=\"multimodal\" id=\"multimodal\" aria-hidden=\"true\">\n        <div class=\"mm-max\">\n          <div class=\"mm-dialog\">\n            <button class=\"mm-close\" type=\"button\" aria-hidden=\"true\" data-modal-close=\"true\" aria-label=\"Close\"><svg class=\"offset\" viewport=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><g transform=\"rotate(45 12 12)\"><line x1=\"0\" y1=\"12\" x2=\"24\" y2=\"12\"></line><line x1=\"12\" y1=\"0\" x2=\"12\" y2=\"24\"></line></g></svg></button>\n            <div class=\"mm-body\"></div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    const modalContainer = document.createElement('div');\n    modalContainer.innerHTML = modalContainerHTML;\n\n    const slidesElement = deck.getSlidesElement();\n    slidesElement.insertAdjacentHTML('afterend', modalContainerHTML);\n\n    resolve();\n  });\n}\n"],"names":["isObject","item","Array","isArray","mergeDeep","target","sources","length","source","shift","key","Object","assign","loadResource","url","type","callback","resource","head","document","querySelector","alreadyExists","createElement","src","rel","href","finish","call","onload","onreadystatechange","this","readyState","appendChild","pluginPath","fileName","path","pluginScript","getAttribute","slice","lastIndexOf","roundToStep","value","step","inv","Math","round","MODAL_ELEMENT_CLASS","MODAL_BODY_CLASS","SHOWN_CLASS","SHOW_CLASS","EVENT_SHOW","EVENT_SHOWN","EVENT_HIDDEN","Modal","constructor","deck","isOpen","modalElement","getRevealElement","modalMax","modalDialog","modalBody","style","setProperty","setAttribute","eventListeners","presetConfigs","closeButtonHtml","addEventListener","event","classList","add","trigger","remove","forEach","className","on","listener","push","action","args","listeners","details","triggerElement","modal","dialog","body","customEvent","CustomEvent","detail","dispatchEvent","show","removeProperty","removeAttribute","window","getComputedStyle","getPropertyValue","setTimeout","hide","setContent","content","htmlString","innerHTML","hasPassiveEvents","passiveTestOptions","passive","removeEventListener","isIosDevice","navigator","platform","test","maxTouchPoints","previousBodyOverflowSetting","htmlStyle","bodyStyle","previousBodyPaddingRight","locks","locksIndex","Map","documentListenerAdded","initialClientY","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","e","touches","disableBodyScroll","targetElement","console","error","set","get","lock2","requestAnimationFrame","$html","documentElement","$body","scrollY","scrollX","innerHeight","height","overflow","position","top","left","width","bottomBarHeight","reserveScrollBarGap","scrollBarGap","innerWidth","getBoundingClientRect","computedBodyPaddingRight","parseInt","paddingRight","setOverflowHidden","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","enableBodyScroll","filter","delete","y","x","scrollTo","restorePositionSetting","isScroller","closest","setSize","margin","revealEl","revealScale","maxWidth","offsetWidth","maxHeight","offsetHeight","floor","scalecorrection","inverseScale","max","borderWidth","borderwidth","match","sizeValue","parseFloat","unit","newBorderwidth","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","hooks","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","RegExp","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","String","fromCharCode","substring","caret","edit","regex","opt","obj","name","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","decodeURIComponent","indexOf","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","offset","str","escaped","curr","split","i","trim","pop","splice","c","invert","l","suffLen","currChar","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","tokens","inlineTokens","Tokenizer","space","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","indentCodeCompensation","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","hasMultipleLineBreaks","pre","def","tag","table","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","lexInline","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","Error","keepPrevChar","keys","includes","startInline","Renderer","infostring","quote","slugger","slug","listitem","checkbox","tablerow","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","Hooks","static","Set","preprocess","markdown","postprocess","parseMarkdown","origOpt","throwError","message","msg","Promise","resolve","reject","onError","marked","prototype","warn","checkSanitizeDeprecation","done","err","pending","then","all","catch","loadModalContent","originalOptions","modalType","dataset","modalUrl","modalContent","modalPadding","padding","modalOverlaycolor","overlaycolor","modalClass","modalBackground","background","iframe","modalBgcolor","media","hasError","video","controls","videocontrols","preload","outerHTML","loadVideo","imageModalUrl","firstChild","tagName","imageAlt","Image","altAttribute","onerror","loadImage","startsWith","firstElementChild","endsWith","response","fetch","ok","md","loadHTML","setOptions","newDefaults","use","childTokens","pack","opts","ext","prevRenderer","apply","prop","prevTokenizer","prevHook","passThroughHooks","has","arg","values","concat","Plugin","Multimodal","TRIGGERATTRIBUTE","CLOSEATTRIBUTE","modalClickTriggers","from","querySelectorAll","revealMargin","getConfig","setupModal","setPresetConfigs","keyboard","mouseWheel","scrollProgress","closebuttonhtml","speed","htmlminwidth","newWidth","isNaN","htmlminheight","newHeight","radius","bordercolor","shadow","zoom","zoomfrom","setupOptions","escapePressed","keyCode","handleModalTrigger","currentTarget","hasAttribute","observer","MutationObserver","mutationsList","mutation","addedNodes","nodeType","handleModalSlideModal","slide","modalEvent","slidemodalevent","slideTriggers","triggerurl","preloadFromSlide","currentSlide","getCurrentSlide","getScale","observe","childList","subtree","scale","spaceEscapeHide","configure","paused","play","pause","closeOnClickOutside","isLocked","modalNavblock","lockNav","videoautoplay","videoautohide","debug","log","unlockNav","modalContainerHTML","getSlidesElement","insertAdjacentHTML","createModalContainer","id","init","defaultOptions","cssautoload","csspath","JSON","stringify","multimodal","indexbase","hashOneBasedIndex","PluginStylePath","generator"],"mappings":"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","x_google_ignoreList":[2,5]}